function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 24-Nov-2021 14:05:03.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx5 matrix, input #1
% and returns:
%   y = Qx5 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [2 3 4 5];
x1_step2.xoffset = [1.125;1.125;1.125;1.125];
x1_step2.gain = [0.444444444444444;0.444444444444444;0.444444444444444;0.444444444444444];
x1_step2.ymin = -1;

% Layer 1
b1 = [-3.4300941671432791935;-2.946460738514483868;3.1778971347718765195;1.8749917002565066326;-1.4874544994017282473;-1.2031018895933276447;0.064771288932884391043;0.027076274601560174071;-0.48380208045317663057;-1.016808730258043747;-0.56524161489093804889;0.28166975160877549822;-0.070275275982039281386;1.2840221203831048147;1.1220284183360551555;2.3976742821140271111;1.5330323526085327668;-2.4941371676560013526;2.4029551380326483745;2.4132457894569183665];
IW1_1 = [2.5021341227990179235 1.0196553620301787024 0.46250650994825676099 0.66165735724512664273;1.8395163455368543914 -1.2980081683391164749 -2.0482816696256005429 0.6529033288449690442;-0.65410899684619849825 1.6597764212887204938 -0.27797127909465413342 -1.8739761398111236534;-2.3183596803576342893 -0.84240137666806702565 1.6000308920463193196 1.2839894699239855491;1.2562716720444100371 -2.1067984926441152282 0.26798121461589785586 2.01322529892069646;0.52024755922413157272 0.03520649475005549478 1.6882364526940680793 -1.5051899850126122526;2.093288851800156003 1.3604128754808912927 2.6070711054014106267 0.26007778155691252397;0.77694201404090001972 -0.45326473324012206412 3.6751715161637199536 -1.793891916544037457;-1.6548575141779811037 1.9024351763569264939 -1.2453375119633789403 1.2943861535950409447;2.3457733936312283873 2.4623815416943353185 -0.75205799851012500312 0.054830672473419772572;-0.81503828208644368836 1.5737323327306318443 -0.62039039662775263828 2.4458844757886812893;1.2067085651415090375 1.8325119235344795587 1.4313431263859197617 -1.7367140030108987325;-1.2560213809939215768 -0.83863627579606458973 0.39553541065426001122 -0.65115207324765134178;1.0388520862329211347 2.1055088359108418139 -1.3217563019619413822 0.92338033573379096897;1.5937172798080734282 0.36836709611256357455 -1.5502956890594752348 0.73440531551388210652;3.0135923368062726979 -1.5999901443737853945 -0.50737023100264744269 0.81134215437236090196;1.1962139607612585213 -1.8579242592607909668 0.79707712959922372153 1.2486399110801311707;-3.3368721849605607055 1.1301047971244357893 0.046505757012292564534 0.42103755825999866769;0.64150563856240561122 0.96343065714099795915 1.7860128756327584565 1.2201036248256524885;-0.56627718752261135826 -1.6833685660202772905 -1.3292439356883394286 -2.7063819573918808103];

% Layer 2
b2 = [-0.84140520907346949553;0.25390832791537987223;-0.98649738200408010336;1.0768683855064500321;0.66760819336407317692];
LW2_1 = [0.0068829269530639360791 0.78395563002069834635 0.32121033440482626986 0.022412742285182196689 0.82027226811983589005 -0.79647573123817838603 -0.99735843984984906552 0.98803375013429373119 -0.33191489085682718274 -0.83787156093873615959 0.66872837539590823663 -0.31921253255576292895 0.10215131814904815366 -0.24394654691508849131 -0.84898869341659488619 0.41152609896178427018 -0.80039941744266906998 0.27970636361705314421 -0.20041260027622662121 -0.58071335455261663405;-0.89817073467113828222 0.34679325288915541226 0.03987319068251259091 0.48063577294199438805 -0.29858717968652420671 -0.26624812056284086204 0.78601474325994447057 0.96778576709150399004 0.045545532712611330739 -0.5568397191868669216 -0.96220923613802733509 -0.87229763037291829786 -0.89708566686646185051 0.23534038388918337992 0.77604879344938504371 0.19352287176127833113 -0.66679435646022944262 -0.25512909661455551724 0.51023816988349579571 -0.039287024192717415194;0.35466665754730741789 -0.39738147463635481449 -0.71435410536739729626 0.090979703093529359914 -0.22391328413405311992 -0.2200805017564535504 0.00365725601482635998 0.14357066686041894399 -0.20499169633292710357 -0.47428658396236400563 0.056326581438242477595 -0.048145249904096312776 -0.44198348121004255029 0.25911381851173753699 0.0080623111913170238119 0.017570759043508868413 0.032106293441629997487 -0.069980075429657451203 0.43855059142953134455 0.2555943504171523939;-0.48074011397988369865 0.30568312180048773374 0.76185416250701687435 -0.22235105645000011187 1.3233628111499267099 0.60933854004858800657 -0.090038307652989854613 -0.2541932879109324861 0.64448077398513503589 0.91125035483460170571 -0.26882365395857871215 -0.30123848956318166614 0.97520435436939900686 -0.040057424894407889226 0.013640704726697427951 -0.096690480328424185941 0.070254635747537985679 -0.072872770038112266722 0.65818994369825689628 -0.62537499125392226329;0.23953225085467730326 -0.206398964024913395 -0.52822074806108032519 0.25029702428311845219 0.074908597432412099559 -0.42805062331518234364 0.1415221685440460897 -0.21587264028361255463 -0.81324572718501397794 0.16393375197614704075 0.43887420650388109244 0.47356264727207814103 0.098184558042422889756 0.075147425193621247841 -0.50449838782182621078 0.96389740005532065226 -0.41813506555776014384 0.81124308194852690068 -0.40154005653732049996 0.1449251872123153706];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [201.040118244158;73.7394781875969;9.78437200486461e-06;3.67401066250065e-06;1.25825471399278e-05];
y1_step1.xoffset = [-0.0073124143;-0.0587996542;-24394.5031;-753792.404;-87984.2413];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
