function [Y,Xf,Af] = trainbr5__518-Dec-2021(X,~,~)
%TRAINBR5__518-DEC-2021 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Dec-2021 18:24:10.
% 
% [Y] = trainbr5__518-Dec-2021(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.50826608;0.75224505;0.25240559;0.7524299;0.250911845];
x1_step1.gain = [0.33388061039706;0.400593992760585;0.364089031557419;0.400510983928626;0.363726553603256];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.44332969772850361334;0.59141992004034005248;0.12582883642944964198;-0.073706714484156457545;0.072564029554076675543];
IW1_1 = [-2.7858987157029901915 2.6869840277616794388 3.584084201212830223 -2.5981973366486079691 -0.7126348446956310978;-0.036274249879545319986 -1.0829382531716924554 0.46346461777661668302 0.045957540621451992147 -0.10842691429801172565;0.017212984349760557939 0.20037318862279288045 -0.11438011749227539049 -1.2368654935785299287 -0.1718102833811500918;-0.16517939070110210231 0.36520036116840048912 -0.0093325858620751916267 -0.71597085764515477901 -0.11674729667706360003;-0.62874920049179106041 -1.3745546084498103667 2.8315654143684261257 3.4982909638060508684 -2.4893947807679261963];

% Layer 2
b2 = [-0.067527091057756463699;1.5249551611758278558;-0.24305448454986683382;0.1603522535635372448;0.50188806533097074514];
LW2_1 = [0.29832309001812373772 -0.33005912355418431936 -2.2109720642812380476 -1.3006952005835015207 0.29928182045639484254;0.89867251785797519492 -1.7094806317304245269 0.62105680277941965883 -4.1852322280810403399 -0.97305228815603062031;1.2252897491602443569 1.2477219269217889597 1.1331035400402125202 -2.7161148077156740399 -0.17221969261381153693;0.96729943223164149835 1.6729780303009682552 0.60274452422407764907 -1.3674474057879648647 -0.10292959718251970536;-0.18213797955574367871 -0.4481542886584805041 1.4214451041681248622 -0.7583943588133533753 0.28446860974538873412];

% Layer 3
b3 = [-0.66940004136160069503;0.69655284176881704372];
LW3_2 = [0.52014914423530256293 0.46910018623203425525 1.300254809847228854 -1.1694380819742282718 1.81791114507703222;-0.71497336920203347077 0.16040899954682652506 1.3949354904815345346 -1.2956408290610965661 -1.2395104512830130705];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.585808911511449;0.568900823163935];
y1_step1.xoffset = [-1.78720142;-6.54522631];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
