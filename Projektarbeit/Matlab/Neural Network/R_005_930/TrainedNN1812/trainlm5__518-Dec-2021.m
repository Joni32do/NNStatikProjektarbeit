function [Y,Xf,Af] = trainlm5__518-Dec-2021(X,~,~)
%TRAINLM5__518-DEC-2021 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Dec-2021 18:24:08.
% 
% [Y] = trainlm5__518-Dec-2021(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.50826608;0.75224505;0.25240559;0.7524299;0.250911845];
x1_step1.gain = [0.33388061039706;0.400593992760585;0.364089031557419;0.400510983928626;0.363726553603256];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.82974462240952051584;-0.7481001830900079197;0.27980302302458448516;-0.76566205062918113455;-0.9493653184835648684];
IW1_1 = [-0.14396528521950627266 -0.61845848633134392625 0.5267598990561203065 -0.68415890868314988005 0.40708391550696571004;1.4576610125896110048 -0.58436362562401356069 0.78070715714881677716 0.36900079034706123604 0.89514181034755757604;1.3329944911338211799 -2.3992223177465197281 -2.6023631050987581226 0.56236074650194922686 1.5699209761600381174;0.25315165692189628421 0.74407964981737362287 -0.54477175481763662201 -0.57287484430858315321 1.1434820172610355993;-0.097417953725920158892 -0.34881870901335015889 -0.46712218180021020109 0.13971164430969112979 1.1318958736146069732];

% Layer 2
b2 = [1.1824597116871242708;-1.5383315401024917346;-0.27440970093450328671;-0.53911738550503929268;-1.5599505496082510803];
LW2_1 = [-0.93822609140579071862 0.1693455272870279249 0.060137175120002883677 -0.11418026124303667923 0.54567841838039865543;1.3733554995954653233 -1.5715463764612391806 0.73363289038113022045 -0.18435969446452471487 1.8234399357680546316;-0.35088766341260357873 0.99867460651424744267 0.020242086062777324418 0.93572793474846605033 -1.5523678298679848275;-0.67449478101499593663 -0.11290069223279775024 -0.1933522004591490262 -1.0007930587629974006 0.038420702876886279886;0.48086351432632351566 1.6280953886389206708 -2.073088820509181307 -0.87249145905590352879 -0.091468026153907214248];

% Layer 3
b3 = [-0.068744061957136948227;-1.1214522946577980544];
LW3_2 = [0.74166506775735807633 -0.17330226373247087368 0.56353788705717555718 0.19644817062029959476 -0.03875779716205421388;0.83940061891460260313 -0.99969855032603582856 -1.1085241686000106842 -1.7153464145468904078 0.81966884320626909322];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.585808911511449;0.568900823163935];
y1_step1.xoffset = [-1.78720142;-6.54522631];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
