function [Y,Xf,Af] = trainlm518-Dec-2021(X,~,~)
%TRAINLM518-DEC-2021 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Dec-2021 18:24:07.
% 
% [Y] = trainlm518-Dec-2021(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.50826608;0.75224505;0.25240559;0.7524299;0.250911845];
x1_step1.gain = [0.33388061039706;0.400593992760585;0.364089031557419;0.400510983928626;0.363726553603256];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.1422081873867950819;-1.9401472721150585521;0.11060439108567221567;-0.064402494246260669208;-2.3340699231260582103];
IW1_1 = [-2.8966918901376068618 1.8765108063761797297 -0.58957442611933863486 -0.86705650795953403964 -1.7932744182334234839;0.89871681126324987066 1.1422646719488358524 -1.4654769519068460149 -2.0302692782769975466 1.1432148004863629254;-0.36015282285270372453 -0.26087811774987890168 -0.37823755360761374122 -1.1486960412229740847 0.68153570292130549735;0.74572501052519668541 0.80127258797888167852 -0.19015715720109643838 0.22356455127582353093 -0.11808966722558271456;-0.78149243494469078364 -0.98416602688267462717 1.7571916481968825607 2.0934695766227644498 -1.2893055349475579519];

% Layer 2
b2 = [0.092508906860319539689;0.28206846458914303089];
LW2_1 = [-0.29573951286742800049 -0.22159578408183058795 -0.071006723380155609138 0.69188288224781191449 -0.036747571869233025543;-0.11643605166471442114 -1.2515544765446771081 2.0547249063738228791 1.7703217066623135878 1.3559262589946254884];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.585808911511449;0.568900823163935];
y1_step1.xoffset = [-1.78720142;-6.54522631];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
