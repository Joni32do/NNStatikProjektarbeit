!################################################
!### Projektarbeit Jonathan Schnitzler     ######
!### Datengenerierung für Neuronales Netz  ######
!################################################





!################################################
!##            Start des Programms             ##
!################################################

/nerr,0


finish
/clear,start


!-----------------
!Parameter
!-----------------

xStart = 0
yStart = 0
height = 8
width = 8
margin = 0.75

windMargin = 0.25

!For House
rw = width - margin - margin
rh = height - margin



n = 0
meshsize = 0.04

tries = 10
pointsPerSim = 1


! Creating Matrix
size = 15
nParam = 11 + 5

*dim, c,, size,nParam, 1 

!############################################
!## Loop over random positions ##
!############################################

*do,try,1,tries,1

!#### S T O R A G E



!#### I N I T   I T E R

parsav,all
finish
/clear,start
parres

!#### R A N D O M
!Pressure
!pressure = rand(10000, 25000)

!Door
doorW = rand(1,3)
doorH = rand(1.8,3)

!Window (range is from 0.5 to 2 NOT UNIFORM distribution)
windW = rand(1.25,1.75)
windH = rand(1.25,1.75)

!Doubles the chance for bigger windows
!*IF,windW,ge,2,THEN
!windW = windW - 0.5
!*ENDIF
!*IF,windH,ge,2,THEN
!windH = windWH - 0.5
!*ENDIF


!Helping Variables
ww = windW + windMargin + windMargin
wh = windH + windMargin + windMargin 
	


doorX =  rand(margin,margin + rw-doorW) !+margin
windX1 = rand(margin,margin + rw-ww)    !+margin
windY1 = rand(0, rh-wh)
windX2 = rand(margin,margin + rw-ww)
windY2 = rand(0,rh-wh)

!#### V A L I D A T E
!--------------------------------------------------------
!window in door 2x
*IF,windX1+ww,gt,doorX,and,windX1,lt,doorX+doorW+windMargin,cycle
*IF,windX2+ww,gt,doorX,and,windX2,lt,doorX+doorW+windMargin,cycle

!--------------------------------------------------------
!window in window
!--------------------------------------------------------
bool = 0
boolF = 0
!!!! Corner x2,y2
*IF,windX1,le,windX2,and,windX2, le, windX1 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY1,le,windY2,and,windY2,le,windY1 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!!!!
!!!! Corner x2+w, y2
bool = 0
*IF,windX1,le,windX2+ww,and,windX2+ww, le, windX1 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY1,le,windY2,and,windY2,le,windY1 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!!!!
!!!! Corner x2, y2 + h
bool = 0
*IF,windX1,le,windX2,and,windX2, le, windX1 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY1,le,windY2+wh,and,windY2+wh,le,windY1 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!!!!
!!!! Corner x2 + w, y2 + h
bool = 0
*IF,windX1,le,windX2+ww,and,windX2 + ww, le, windX1 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY1,le,windY2+wh,and,windY2+wh,le,windY1 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!--------------------------------------------------------


/prep7





!-----------------
!Create House
!-----------------
!House
BLC4,xStart, yStart, width, height 

!Door
BLC4,doorX,yStart, doorW, doorH 

!Window
BLC4,windX1+windMargin,windY1+windMargin,windW,windH

!2nd Window 
BLC4,windX2+windMargin,windY2+windMargin,windW,windH

!Selecting and deleting the area of Door and the two windows
FLST,3,3,5,ORDE,2   
FITEM,3,2   
FITEM,3,-4  
ASBA,       1,P51X



!-----------------
! Material
!-----------------
ET,1,PLANE182
KEYOPT,1,1,0
KEYOPT,1,3,3
KEYOPT,1,6,0

r,1,0.2

mp,ex,1,30000000
mp,prxy,1,0.2 !Standardwerte Querdehnzahl [0  0.3]

dl,17,,all
dl,18,,all
sfl,3,pres,25000 !pressure

!-----------------
! Mesh
!-----------------
esize,meshsize
amesh,all
cpintf,all
	
/solu
solve

/post1


!#########################################
!##### E V A L U A T E   P O I N T S  ####
!#########################################
!Chooses up to pointsPerSim values for critical point (probably less)
*do,cr,1,pointsPerSim,1

!Critical Point
xC = rand(margin, margin + rw)
yC = rand(margin, margin + rh)

!----------------------
!crit in window 2x
!----------------------
bool = 0
*IF,windX1,le,xC,and,xC, le, windX1 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY1,le,yC,and,yC,le,windY1 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!!!!!!!
bool = 0
*IF,windX2,le,xC,and,xC, le, windX2 + ww,THEN
	bool = bool + 1
*ENDIF
*IF, windY2,le,yC,and,yC,le,windY2 + wh,THEN
	bool = bool + 1
*ENDIF
*IF,bool,ge,2,cycle
!-----------------------

!Otherwise new Datapoint

n = n + 1


!-----------------
! Value at point critical point
!-----------------

!Checken ob wir wirklich die Lösung bekommen die wir wollen
! maximale Verschiebung bei xC,yC
allsel
!seltol, meshsize
nsel,s,loc,x,xC-meshsize, xC + meshsize !select nodes with x coordinate
nsel,r,loc,y,yC-meshsize, yC + meshsize !reselect with y coordinate


*get,UY44,NODE,NDNEXT(0),U,Y !NDNEXT is ugly
*get,UX44,NODE,NDNEXT(0),U,X
*get,SX44,NODE,NDNEXT(0),S,X
*get,SY44,NODE,NDNEXT(0),S,Y
*get,SXY44,NODE,NDNEXT(0),S,XY

!-----------------
! Saving initial Param
!-----------------
c(n,1) = doorX
c(n,2) = windX1
c(n,3) = windY1
c(n,4) = windX2
c(n,5) = windY2
c(n,6) = doorW
c(n,7) = doorH
c(n,8) = windW
c(n,9) = windH
c(n,10) = xC
c(n,11) = yC

!-----------------
! Saving solution Param
!-----------------
c(n,12) = UX44
c(n,13) = UY44
c(n,14) = SX44
c(n,15) = SY44
c(n,16) = SXY44

*enddo


*EXIT
*enddo


!!! Writes out Matrix to matlab
*dmat, exportmatrix, D, import, APDL, c ! export to matrix file
*export, exportmatrix, mmf, mytemp.mtx



