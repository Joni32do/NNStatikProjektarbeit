!################################################
!### Projektarbeit Jonathan Schnitzler     ######
!### Datengenerierung für Neuronales Netz  ######
!################################################



!##############
!## T O  D O ##
!##############
!
! - Generalisierung vervollständigen
!    o Länge und Breite des Grids zur Fensterabzählung ergänzen
!
!
!
! - Auswertungspunkte Verbessern
!
!
!
!##############


!################################################
!##            Start des Programms             ##
!################################################

/nerr,0

*do,j,1,10,1
/com,
*enddo
/COM *** 5.2.2 ANSYS APDL ***

finish
/clear,start


!-----------------
!Parameter
!-----------------

xStart = 0
yStart = 0
height = 8
width = 8
doorX = 1
doorY = 2
windW = 1.25
windH = 1.25
margin = 1
windMargin = 0.125
doorStep = 1
data = 0

meshsize = 0.1
steps = 3    !(width-2*margin)/doorStep
maxWStep = 13
n = 0

!*ask,startVal,Anfangswert,0
startVal = 1

! S
size = 600 !steps * (maxWStep+1)*maxWStep /2
nParam = 10

*dim, c,, size,nParam, 1 ! Example Matrix
enow = 0
*do, ct, 1, size
    *do, ct2, 1, nParam
        c(ct,ct2) = startVal
    *enddo    
*enddo    


! ---------------------------------------
! *** loop to restart the calculation ***
!----------------------------------------

*do,door,1,steps,doorStep
*do, w1, 0, maxWStep,1
*do, w2, w1+1,maxWStep,1
n = n + 1
!-----------------
!Initialize Iter
!-----------------
parsav,all
finish
/clear,start
parres



colW1 = MOD(w1,4)
rowW1 = (w1 - colW1)/4
colW2 = MOD(w2,4)
rowW2 = (w2 - colW2)/4

!Case where window and door are at one line

!*IF, door,LE,3,THEN
!*IF, w1, GE, 12, THEN
!colW1 = colW1 + 2
!*ELSE
!colW1 = colW1
!*ENDIF
!!Same for w2
!*IF, w2, GE, 12, THEN
!colW2 = colW2 + 2
!*ELSE
!colW2 = colW2
!*ELSE
!w1 = w1
!*ENDIF

wind1X = margin + colW1*(2* windMargin + windW) + windMargin
wind1Y = height - margin - (rowW1+1)*(2*windMargin + windW) + windMargin
wind2X = margin + colW2*(2* windMargin + windW) + windMargin
wind2Y = height - margin - (rowW2+1)*(2*windMargin + windW) + windMargin




/prep7

!-----------------
! Saving initial Param
!-----------------
c(n,1) = door
c(n,2) = wind1X
c(n,3) = wind1Y
c(n,4) = wind2X
c(n,5) = wind2Y



!-----------------
!Create House
!-----------------
BLC4,xStart, yStart, width, height !House
BLC4,door,yStart, doorX, doorY !Door
BLC4,wind1X,wind1Y,windW,windH !Window
BLC4,wind2X,wind2Y,windW,windH !2nd Window
!Selecting and deleting the area of Door and the two windows
FLST,3,3,5,ORDE,2   
FITEM,3,2   
FITEM,3,-4  
ASBA,       1,P51X



!-----------------
! Material
!-----------------
ET,1,PLANE182
KEYOPT,1,1,0
KEYOPT,1,3,3
KEYOPT,1,6,0

r,1,0.2
	
mp,ex,1,30000000
mp,prxy,1,0.2

dl,17,,all
dl,18,,all
sfl,3,pres,25000000 !2.5E7

!-----------------
! Mesh
!-----------------
esize,meshsize
amesh,all
cpintf,all
	
!/OUTPUT,data,txt,APPEND
/SOL
SOLVE   
FINISH  
/POST1 
	
!-----------------
! Value at point 4,4
!-----------------
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! T O   D O !!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!Checken ob wir wirklich die Lösung bekommen die wir wollen
! maximale Verschiebung bei 4,4
allsel
seltol,0.1
nsel,s,loc,x,4 !select nodes with x coordinate
nsel,r,loc,y,4 !reselect with y coordinate
*get,UY44,NODE,NDNEXT(0),U,Y
*get,UX44,NODE,NDNEXT(0),U,X
!Stress muss über ELEMENTE SELECTION gemacht werden
*get,SX44,NODE,NDNEXT(0),S,X
*get,SY44,NODE,NDNEXT(0),S,Y
*get,SXY44,NODE,NDNEXT(0),S,XY
c(n,6) = UX44
c(n,7) = UY44
c(n,8) = SX44
c(n,9) = SY44
c(n,10) = SXY44
	

!!!!!!!!!!!!!!!!!
! I M A G E S
!!!!!!!!!!!!!!!!

/SHOW,WIN32C
SET,FIRST   
/PLOPTS,INFO,3  
/CONTOUR,ALL,18 
/PNUM,MAT,1 
/NUMBER,1   
/REPLOT,RESIZE  
PLNSOL,U,X  
/UI,COPY,SAVE,PNG,GRAPH,COLOR,NORM,LANDSCAPE,YES
! /UIS,ABORT,1  
/SHOW,WIN32 
/REPLOT,RESIZE  



	
	
*enddo
*enddo
*enddo


!!! Writes out Matrix to matlab
*dmat, exportmatrix, D, import, APDL, c ! export to matrix file
*export, exportmatrix, mmf, mytemp.mtx


